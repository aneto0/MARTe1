Version = "$Id: MARTe-WaterTank-with-flot.cfg,v 1.1 2011/06/29 16:02:08 aneto Exp $"
LoggerAddress = "localhost"
DefaultCPUs = 15
+WEB = {
    Class = HttpGroupResource
    +BROWSE = {
        Title = "Http Object Browser"
        Class = HttpGCRCBrowser
        AddReference = {MARTe StateMachine OBJBROWSE THRBROWSE CFGUpload HTTPSignalServer FlotPlot MatlabSignalServer}
    }
	+RGRAPH_LIB_DIR = {
		Class   = HttpDirectoryResource
		BaseDir = "/home/andre/Projects/JET_Control/BaseLib2/3rdPartyLibs/RGraph/libraries"
	}
	+FLOT_DIR = {
		Class   = HttpDirectoryResource
		BaseDir = "/home/andre/Projects/JET_Control/BaseLib2/3rdPartyLibs/flot"
	}
	+PLOTTING_GAM_DIR = {
		Class   = HttpDirectoryResource
		BaseDir = "."
	}
}
+HTTPSERVER = {
    Class = HttpService
    Port = 8084
    VerboseLevel = 10
    Root = WEB
}
+OBJBROWSE = {
    Class = HttpClassListResource
}
+THRBROWSE = {
    Class = HttpThreadListResource
}
+MatlabSignalServer = {
    Class = MATLABHandler
}
+HTTPSignalServer={
     Class = SignalServer
}
+FlotPlot={
     Class = FlotPlot
}
+CFGUpload = {
    Class = CFGUploader
}
+StateMachine = {
    Class = StateMachine
    VerboseLevel = 10
    +INITIAL = {
        Class = StateMachineState
        StateCode = 0x0
        +START = {
            Class = StateMachineEvent
            NextState = IDLE
            Value = START
            +STARTALL = {
                Class = MessageDeliveryRequest
                Sender = StateMachine
                Destinations = "HTTPSERVER MARTe"
                MsecTimeOut = 1000
                Flags = NoReply
                Message = {
                    Class = Message
                    Content = START
                }
            }
        }
    }
    +IDLE = {
        Class = StateMachineState
        StateCode = 0x500
        +PULSE_SETUP_COMPLETED = {
            Class = StateMachineEvent
            Code = 0x701
            NextState = WAITING_FOR_TRIGGER
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = MARTe
                +MESSAGE = {
                    Class = Message
                    Content = PREPULSECHECK
                }
            }
            +UPDATE_MSS = {
                Class = MessageEnvelope
                Destination = MatlabSignalServer
                +MESSAGE = {
                    Class = Message
                    Content = AUTODETECT
                }
            }
			+UPDATE_SS = {
                Class = MessageEnvelope
                Destination = HTTPSignalServer
                +MESSAGE = {
                    Class = Message
                    Content = AUTODETECT
                }
            }
			+UPDATE_FP = {
                Class = MessageEnvelope
                Destination = FlotPlot
                +MESSAGE = {
                    Class = Message
                    Content = AUTODETECT
                }
            }
        }
        +INHIBIT = {
            Class = StateMachineEvent
            Code = 0x704
            NextState = INHIBIT
        }
        +ACTIVATE = {
            Class = StateMachineEvent
            Code = 0x705
            NextState = SAMESTATE
        }
        +UNRECOVERABLE = {
            Class = StateMachineEvent
            Code = 0x776
            NextState = UNRECOVERABLE
        }
        +CONFIG_ERROR = {
            Class = StateMachineEvent
            Code = 0x777
            NextState = CONFIG_ERROR
        }
        +CONFIG_OK = {
            Class = StateMachineEvent
            Code = 0x778
            NextState = SAMESTATE
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = CODAS.SMH
                +SENDSTATE = {
                    Class = Message
                    Code = 0x500
                }
            }
        }
        +STOP = {
            Class = StateMachineEvent
            NextState = IDLE
            Value = STOP
            Code = 0x005
            +STOPALL = {
                Class = MessageDeliveryRequest
                Sender = StateMachine
                Destinations = "HTTPSERVER MARTe"
                MsecTimeOut = 1000
                Flags = NoReply
                Message = {
                    Class = Message
                    Content = STOP
                }
            }
        }
    }
    +WAITING_FOR_TRIGGER = {
        Class = StateMachineState
        StateCode = 0x504
        +TRIGGER = {
            Class = StateMachineEvent
            Code = 0x708
            NextState = PULSING
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = MARTe
                +MESSAGE = {
                    Class = Message
                    Content = PULSESTART
                }
            }
        }
        +ABORT = {
            Class = StateMachineEvent
            Code = 0x702
            NextState = IDLE
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = MARTe
                +MESSAGE = {
                    Class = Message
                    Content = PULSESTOP
                }
            }
        }
        +COLLECTION_COMPLETED = {
            Class = StateMachineEvent
            Code = 0x703
            NextState = COMM_ERROR
        }
    }
    +PULSING = {
        Class = StateMachineState
        StateCode = 0x505
        +ENTER = {
            Class = MessageEnvelope
            Destination = CODAS.SMH
            +SENDSTATE = {
                Class = Message
            }
        }
        +ABORT = {
            Class = StateMachineEvent
            Code = 0x702
            NextState = IDLE
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = MARTe
                +MESSAGE = {
                    Class = Message
                    Content = PULSESTOP
                }
            }
        }
        +END_PULSE = {
            Class = StateMachineEvent
            Code = 0x709
            NextState = POST_PULSE
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = MARTe
                +MESSAGE = {
                    Class = Message
                    Content = PULSESTOP
                }
            }
        }
    }
    +POST_PULSE = {
        Class = StateMachineState
        StateCode = 0x507
        +ENTER = {
            Class = MessageEnvelope
            Destination = CODAS.SMH
            +SENDSTATE = {
                Class = Message
            }
        }
        +COLLECTION_COMPLETED = {
            Class = StateMachineEvent
            Code = 0x703
            NextState = IDLE
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = MARTe
                +MESSAGE = {
                    Class = Message
                    Content = COLLECTIONCOMPLETED
                }
            }
        }
    }
    +INHIBIT = {
        Class = StateMachineState
        StateCode = 0x508
        +ACTIVATE = {
            Class = StateMachineEvent
            Code = 0x705
            NextState = IDLE
        }
    }
    +ERROR = {
        Class = StateMachineState
        StateCode = 0x601
        +ACTIVATE = {
            Class = StateMachineEvent
            Code = 0x705
            NextState = IDLE
        }
        +COLLECTION_COMPLETED = {
            Class = StateMachineEvent
            Code = 0x703
            NextState = IDLE
        }
    }
    +CONFIG_ERROR = {
        Class = StateMachineState
        StateCode = 0x601
        +ENTER = {
            Class = MessageEnvelope
            Destination = CODAS.SMH
            +SENDSTATE = {
                Class = Message
            }
        }
        +ACTIVATE = {
            Class = StateMachineEvent
            Code = 0x705
            NextState = IDLE
        }
        +CONFIG_OK = {
            Class = StateMachineEvent
            Code = 0x778
            NextState = IDLE
            +NOTIFY = {
                Class = MessageEnvelope
                Sender = StateMachine
                Destination = CODAS.SMH
                +SENDSTATE = {
                    Class = Message
                    Code = 0x500
                }
            }
        }
	+CONFIG_ERROR = {
            Class = StateMachineEvent
            Code = 0x777
            NextState = CONFIG_ERROR
        }
    }
    +UNRECOVERABLE = {
        Class = StateMachineState
        StateCode = 0x601
        +DEFAULT = {
            Class = StateMachineEvent
            UserCode = 0
            NextState = UNRECOVERABLE
        }
    }
    +COMM_ERROR = {
        StateCode = 0x601
        Class = StateMachineState
        +ABORT = {
            Class = StateMachineEvent
            Code = 0x702
            NextState = SAMESTATE
        }
    }
    +DEFAULT = {
        Class = StateMachineState
        StateCode = 0x601
        +ABORT = {
            Class = StateMachineEvent
            Code = 0x702
            NextState = IDLE
        }
        +TRIGGER = {
            Class = StateMachineEvent
            Code = 0x708
            NextState = SAMESTATE
        }
        +END_PULSE = {
            Class = StateMachineEvent
            Code = 0x709
            NextState = SAMESTATE
        }
    }
}
+MARTeMenu = {
    Class = MARTeSupLib::MARTeMenu
    Title = "MARTe Menu"
    +MenuA = {
        Class = MenuContainer
        Title = "CODAS Interface"
        +ABORT = {
            Class = SendMessageMenuEntry
            Title = Abort
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x702
                    Content = ABORT
                }
            }
        }
        +INHIBIT = {
            Class = SendMessageMenuEntry
            Title = Inhibit
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x704
                    Content = Inhibit
                }
            }
        }
        +ACTIVATE = {
            Class = SendMessageMenuEntry
            Title = Activate
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x705
                    Content = Activate
                }
            }
        }
        +PULSESETUPCOMPLETE = {
            Class = SendMessageMenuEntry
            Title = "Pulse Setup Complete"
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x701
                    Content = WAITING_FOR_TRIGGER
                }
            }
        }
        +TRIGGER = {
            Class = SendMessageMenuEntry
            Title = "Pulse Start"
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x708
                    Content = TRIGGER 
                }
            }
        }
        +END_PULSE = {
            Class = SendMessageMenuEntry
            Title = "Pulse End"
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x709
                    Content = END_PULSE 
                }
            }
        }
        +COLLECTIONCOMPLETED = {
            Class = SendMessageMenuEntry
            Title = "Collection Completed"
            Envelope = {
                Class = MessageEnvelope
                Sender = MARTeMenu
                Destination = StateMachine
                +Message = {
                    Class = Message
                    Code = 0x703
                    Content = POSTPULSE
                }
            }
        }
    }
    AddReference = MARTe.MARTe
}
+MARTe = {
    Class = MARTeContainer
    StateMachineName = StateMachine
    Level1Name = LEVEL1
    MenuContainerName = MARTe
    +MARTe = {
        Class = MenuContainer
    }
    +DriverPool = {
        Class = GCReferenceContainer
        +TimerBoard = {
            Class = GenericTimerDrv
            NumberOfInputs = 2
            NumberOfOutputs = 0
            TimerUsecPeriod = 1000
            SynchronizationMethod = Synchronizing
            CPUMask = 1
        }
    }
    +Messages = {
        Class = GCReferenceContainer
        +FatalErrorMessage = {
            Class = MessageDeliveryRequest
            Destinations = StateMachine
            MsecTimeOut = 1000
            Flags = NoReply
            Message = {
                Class = Message
                Code = 0x776
                Content = UNRECOVERABLE
            }
        }
        +ConfigLoadErrorMessage = {
            Class = MessageDeliveryRequest
            Destinations = StateMachine
            MsecTimeOut = 1000
            Flags = NoReply
            Message = {
                Class = Message
                Code = 0x777
                Content = CONFIG_ERROR
            }
        }
        +ConfigLoadOKMessage = {
            Class = MessageDeliveryRequest
            Destinations = StateMachine
            MsecTimeOut = 1000
            Flags = NoReply
            Message = {
                Class = Message
                Code = 0x778
                Content = CONFIG_OK
            }
        }
        +SafetyErrorMessage = {
            Class = MessageDeliveryRequest
            Destinations = MARTe
            MsecTimeOut = 1000
            Flags = NoReply
            Message = {
                Class = Message
                Content = ERROR
            }
        }
    }
    +ExternalTimeTriggeringService = {
        Class = InterruptDrivenTTS
        TsOnlineUsecPeriod = 1000
        TsOnlineUsecPhase = 0
        TsOfflineUsecPeriod = 1000
        TsOfflineUsecPhase = 0
        TimeModule = {
            BoardName = TimerBoard
        }
    }
    +Thread_1 = {
        Class = RealTimeThread
        ThreadPriority = 28
        RunOnCPU = 2
        RTStatusChangeMsecTimeout = 1000
        SMStatusChangeMsecTimeout = 1000
        OfflineSemaphoreTimeout = 50
        TriggeringServiceName = MARTe.ExternalTimeTriggeringService
        SafetyMsecSleep = 1
        +DDB = {
            Class = DDB
        }
        +Timer = {
            Class = IOGAMs::TimeInputGAM
            TriggeringServiceName = ExternalTimeTriggeringService
            BoardName = TimerBoard
            Signals = {
                time = {
                    SignalName = usecTime
                    SignalType = int32
                }
                counter = {
                    SignalName = counter
                    SignalType = int32
                }
            }
        }
        +WaveformGen = {
            Class    = WaveformGenerator
            UsecTime = usecTime
            +waterHeightReference = {
                Class     = WaveformClassSine
                Frequency = 0.1
                Gain      = 1
                Offset    = 2.5
                Tend      = 2000
            }
            +zeroSignal = {
                Class       = WaveformClassPoints
                TimeVector  = {0 1}
                ValueVector = {0 0}
                Frequency   = 1
                Tend        = 2000
            }
        }
        +PIDGAM = {
            Class  = PIDGAM
            TStart = 0.0
            TEnd   = 2000.0
            InputSignals = {
                PIDInput = {
                    SignalName = PIDIn
                    SignalType = PIDGAMInputStructure
                    FlatNamed  = True
                }
	        }
            OutputSignals = {
                PIDOutput = {
                    SignalName = PIDOut
                    SignalType = PIDGAMOutputStructure
                    FlatNamed  = True
                }
            }
            Remappings = {
                InputInterface = {
                    usecTime    = usecTime
                    reference   = waterHeightReference
                    measurement = waterHeight
                    feedforward = zeroSignal
                }
                OutputInterface = {
                    controlSignal       = pumpVoltageRequest
                    feedback            = pumpVoltageRequest
                    error               = pidHeightError
                    integratorState     = pidIntState
                }
            }
            Kp            = 3.00
	        Ki            = 2.00
	        Kd            = 0.20 
            SamplingTime  = 0.001
            ControllerOn  = On
        }
        +WaterTank = {
            Class = WaterTank
            InputSignals = {
                usecTime = {
                    SignalName = usecTime
                    SignalType = int32
                }
                voltage  = {
                    SignalName = pumpVoltageRequest
                    SignalType = float
                }
            }
            OutputSignals = {
                height = {
                    SignalName = waterHeight
                    SignalType = float
                }
                pumpVoltage = {
                    SignalName = pumpVoltage
                    SignalType = float
                }
            }
            SVGFileLocation  = "WaterTank.svg"
            AnimationEnabled = 1
            aFlowRate        = 20.0
            bFlowRate        = 50.0
            TankArea         = 20.0
            MaxVoltage       = 5
            MinVoltage       = 0
        }
        +Statistic = {
            Class = WebStatisticGAM
            Verbose = True
            FrequencyOfVerbose = 2000000
            Signals = {
                SignalU = {
                    SignalName = usecTime
                    SignalType = int32
                }
        		Signal0 = {
                    SignalName = CycleUsecTime
                    SignalType = float
                }
                Signal1 = {
                    SignalName = waterHeightReference
                    SignalType = float
                }
                Signal2 = {
                    SignalName = waterHeight
                    SignalType = float
                }
                Signal3 = {
                    SignalName = pumpVoltageRequest
                    SignalType = float
                }
                Signal4 = {
                    SignalName = pumpVoltage
                    SignalType = float
                }
                Signal5 = {
                    SignalName = TimerAbsoluteUsecTime
                    SignalType = float
                }
                Signal6 = {
                    SignalName = WaveformGenAbsoluteUsecTime
                    SignalType = float
                }
                Signal7 = {
                    SignalName = PIDGAMAbsoluteUsecTime
                    SignalType = float
                }
                Signal8 = {
                    SignalName = WaterTankAbsoluteUsecTime
                    SignalType = float
                }
                Signal9 = {
                    SignalName = StatisticAbsoluteUsecTime
                    SignalType = float
                }
                Signal10 = {
                    SignalName = CollectionAbsoluteUsecTime
                    SignalType = float
                }
                Signal11 = {
                    SignalName = TimerRelativeUsecTime
                    SignalType = float
                }
                Signal12 = {
                    SignalName = WaveformGenRelativeUsecTime
                    SignalType = float
                }
                Signal13 = {
                    SignalName = PIDGAMRelativeUsecTime
                    SignalType = float
                }
                Signal14 = {
                    SignalName = WaterTankRelativeUsecTime
                    SignalType = float
                }
                Signal15 = {
                    SignalName = StatisticRelativeUsecTime
                    SignalType = float
                }
                Signal16 = {
                    SignalName = CollectionRelativeUsecTime
                    SignalType = float
                }
            }
        }
		+PlottingGAM = {
			Class = PlottingGAM::PlottingGAM
			HttpRefreshMsecTime = 500
			+Window1 = {
				Class = PlotWindow::PlotWindow
				XAxisSignalName = usecTime
	    		XAxisSignalType = int32
				XAxisScaleFactor = 0.001
	    		PlotLastNBuffers = 100
				PlotPixelWidth = 1250
				PlotPixelHeight = 350
	    		YAxisScale = "Linear"
	    		XLabel = "Time (ms)"
	    		YLabel = "cm"
				InputSignals = {
					Signal1 = {
						SignalName = waterHeightReference
		    			SignalType = float
					}
					Signal2 = {
						SignalName = waterHeight
		    			SignalType = float
					}
				}
			}
			+Window3 = {
				Class = PlotWindow::PlotWindow
				XAxisSignalName = usecTime
	    		XAxisSignalType = int32
				XAxisScaleFactor = 0.001
	    		PlotLastNBuffers = 500
				PlotPixelWidth = 1250
				PlotPixelHeight = 350
				OnlyPositiveY = Yes
	    		YAxisScale = "linear"
	    		XLabel = "Time (ms)"
	    		YLabel = "Cycle time (s)"
				InputSignals = {
					Signal1 = {
						SignalName = CycleUsecTime
		    			SignalType = float
					}
				}
			}
		}
        +Collection = {
            Class = CollectionGAMs::DataCollectionGAM
            UsecTimeSignalName = usecTime
            EventTrigger = {
                TimeWindow0 = {
                    NOfSamples = 40000
                    UsecPeriod = 1000
                }
            }
            NOfAcquisitionSamples = 400000
            Signals = {
                CLOCK = {
                    SignalName = usecTime
                    JPFName = "TIME"
                    SignalType = int32
                    Cal0 = 0.0
                    Cal1 = 1.000000e-06
                }
                CycleTime = {
                    SignalName = CycleUsecTime
                    JPFName = "CycleTime"
                    SignalType = float
                }                
                WaterReference = {
                    SignalName = waterHeightReference
                    JPFName = "WaterHeightReference"
                    SignalType = float
                }
                WaterHeight = {
                    SignalName = waterHeight
                    JPFName = "WaterHeight"
                    SignalType = float
                }
                PumpVoltageReq = {
                    SignalName = pumpVoltageRequest
                    JPFName    = "PumpVoltageRequest"
                    SignalType = float
                }
                PumpVoltage = {
                    SignalName = pumpVoltage
                    JPFName    = "PumpVoltage"
                    SignalType = float
                }
                PIDError = {
                    SignalName = pidHeightError
                    JPFName    = "PIDError"
                    SignalType = float
                }
                PIDIntState = {
                    SignalName = pidIntState
                    JPFName    = "PIDIntState"
                    SignalType = float
                }
                Signal5 = {
                    SignalName = TimerAbsoluteUsecTime
                    JPFName    = "TimerAbsoluteUsecTime"
                    SignalType = float
                }
                Signal6 = {
                    SignalName = WaveformGenAbsoluteUsecTime
                    JPFName    = "WaveformGenAbsoluteUsecTime"
                    SignalType = float
                }
                Signal7 = {
                    SignalName = PIDGAMAbsoluteUsecTime
                    JPFName    = "PIDGAMAbsoluteUsecTime"
                    SignalType = float
                }
                Signal8 = {
                    SignalName = WaterTankAbsoluteUsecTime
                    JPFName    = "WaterTankAbsoluteUsecTime"
                    SignalType = float
                }
                Signal9 = {
                    SignalName = StatisticAbsoluteUsecTime
                    JPFName    = "StatisticAbsoluteUsecTime"
                    SignalType = float
                }
                Signal10 = {
                    SignalName = CollectionAbsoluteUsecTime
                    JPFName    = "CollectionAbsoluteUsecTime"
                    SignalType = float
                }
                Signal11 = {
                    SignalName = TimerRelativeUsecTime
                    JPFName    = "TimerRelativeUsecTime"
                    SignalType = float
                }
                Signal12 = {
                    SignalName = WaveformGenRelativeUsecTime
                    JPFName    = "WaveformGenRelativeUsecTime"
                    SignalType = float
                }
                Signal13 = {
                    SignalName = PIDGAMRelativeUsecTime
                    JPFName    = "PIDGAMRelativeUsecTime"
                    SignalType = float
                }
                Signal14 = {
                    SignalName = WaterTankRelativeUsecTime
                    JPFName    = "WaterTankRelativeUsecTime"
                    SignalType = float
                }
                Signal15 = {
                    SignalName = StatisticRelativeUsecTime
                    JPFName    = "StatisticRelativeUsecTime"
                    SignalType = float
                }
                Signal16 = {
                    SignalName = CollectionRelativeUsecTime
                    JPFName    = "CollectionRelativeUsecTime"
                    SignalType = float
                }
            }
        }

        Online = "Timer WaveformGen PIDGAM WaterTank PlottingGAM Statistic Collection"
        Offline = "Timer PlottingGAM Statistic"
    }
}
ReloadAll = 0
