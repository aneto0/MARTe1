# Copyright 1994-2010 The MathWorks, Inc.
#
# File    : rtwsfcn_watc.tmf $Revision: 1.30.4.20 $
#
# Abstract:
#	Template makefile for building a Windows-based, generated S-Function of 
#       a Simulink model using generated C code and the Open Watcom compiler
#
#       The following defines (macro names) can be used to modify the behavior
#       of the build:
#
#         OPT_OPTS       - Optimization option. Specify OPT_OPTS=-g to
#                          create a mex file for debugging.
#	  MEX_OPTS       - User specific mex options.
#	  USER_OBJS      - Additional user objects, such as files needed by
#			   S-functions.
#         USER_PATH      - The directory path to the source (.c) files which
#                          are used to create any .obj files specified in
#                          USER_OBJS. Multiple paths must be separated
#                          with a semicolon. For example:
#                          "USER_PATH=path1;path2"
#	  USER_INCLUDES  - Additional include paths (i.e.
#			   "USER_INCLUDES=-Iinclude-path1 -Iinclude-path2")
#
#       In particular, note how the quotes are before the name of the macro
#       name.
#
#       This template makefile is designed to be used with a system target
#       file that contains 'rtwgensettings.BuildDirSuffix' see rtwsfcn.tlc

#------------------------ Macros read by make_rtw -----------------------------
#
# The following macros are read by the build procedure:
#	MAKECMD - This is the command used to invoke the make utility
#	HOST    - What platform this template makefile is targeted for
#                 (i.e. PC or UNIX)
#	BUILD  - Invoke make from the build procedure (yes/no)?
#       TARGET - Type of target Real-Time (RT) or Nonreal-Time (NRT)
#
MAKECMD         = "%WATCOM%\binnt\wmake"
HOST            = PC
BUILD           = yes
SYS_TARGET_FILE = rtwsfcn.tlc
COMPILER_TOOL_CHAIN = watc

#---------------------- Tokens expanded by make_rtw ---------------------------
#
# The following tokens, when wrapped with "|>" and "<|" are expanded by the
# build procedure.
#
#  MODEL_NAME        - Name of the Simulink block diagram
#  MODEL_MODULES_OBJ - Object file name for any additional generated source
#                      modules
#  MAKEFILE_NAME     - Name of makefile created from template makefile
#                      <model>.mk
#  MATLAB_ROOT       - Path to where MATLAB is installed.
#  MATLAB_BIN        - Path to MATLAB executable.
#  S_FUNCTIONS_LIB   - List of S-functions libraries to link.
#  S_FUNCTIONS       - List of S-functions .obj sources
#  SOLVER_OBJ        - Solver object file name
#  NUMST             - Number of sample times
#  TID01EQ           - yes (1) or no (0): Are sampling rates of continuous
#                      task (tid=0) and 1st discrete task equal.
#  NCSTATES          - Number of continuous states
#  MEXEXT          - extension that a mex file has. See the MATLAB mexext 
#                    command
#  BUILDARGS         - Options passed in at the command line.
#  CREATEMODEL     - 1 will cause a untitled model to be opened with the
#                    generated s-function block inside it.
#  USERMODULES     - passed along for later code generations of models that
#                    contain this S-Function. (Used by generated S-Function block)
#  USEPARAMVALUES  - 1 will cause the generated S-function block to have values
#                    instead of variable names.

MODEL              = |>MODEL_NAME<|
MODULES            = |>MODEL_MODULES_OBJ<|
MAKEFILE           = |>MAKEFILE_NAME<|
MATLAB_ROOT        = |>MATLAB_ROOT<|
ALT_MATLAB_ROOT    = |>ALT_MATLAB_ROOT<|
MATLAB_BIN         = |>MATLAB_BIN<|
ALT_MATLAB_BIN     = |>ALT_MATLAB_BIN<|
MASTER_ANCHOR_DIR  = |>MASTER_ANCHOR_DIR<|
START_DIR          = |>START_DIR<|
S_FUNCTIONS        = |>S_FUNCTIONS_OBJ<|
S_FUNCTIONS_LIB    = |>S_FUNCTIONS_LIB<|
SOLVER             = |>SOLVER_OBJ<|
NUMST              = |>NUMST<|
TID01EQ            = |>TID01EQ<|
NCSTATES           = |>NCSTATES<|
MEM_ALLOC          = |>MEM_ALLOC<|
MEXEXT             = |>MEXEXT<|
BUILDARGS          = |>BUILDARGS<|
CREATEMODEL        = |>CREATEMODEL<|
USERMODULES        = |>USERMODULES<|
USEPARAMVALUES     = |>USEPARAMVALUES<|
MEX_OPT_FILE       = |>MEX_OPT_FILE<|
OPTIMIZATION_FLAGS = |>OPTIMIZATION_FLAGS<|
ADDITIONAL_LDFLAGS = |>ADDITIONAL_LDFLAGS<|

#-- In the case when directory name contains space ---
!ifneq MATLAB_ROOT $(ALT_MATLAB_ROOT)
MATLAB_ROOT = $(ALT_MATLAB_ROOT)
!endif
!ifneq MATLAB_BIN $(ALT_MATLAB_BIN)
MATLAB_BIN = $(ALT_MATLAB_BIN)
!endif

#--------------------------------- Tool Locations -----------------------------
#
# Modify the following macro to reflect where you have installed
# the Watcom C/C++ Compiler.
#
!ifndef %WATCOM
!error WATCOM environmental variable must be defined
!else
WATCOM = $(%WATCOM)
!endif

#---------------------------- Tool Definitions --------------------------------

!include $(MATLAB_ROOT)\rtw\c\tools\watctools.mak
MEX    = $(MATLAB_BIN)\mex

#------------------------------ Include/Lib Path ------------------------------

MATLAB_INCLUDES = &
$(MATLAB_ROOT)\simulink\include;&
$(MATLAB_ROOT)\extern\include;&
$(MATLAB_ROOT)\rtw\c\src;

# Additional include path 

ADD_INCLUDES = &
|>START_EXPAND_INCLUDES<||>EXPAND_DIR_NAME<|;&
|>END_EXPAND_INCLUDES<|

COMPILER_INCLUDES = $(WATCOM)\h;$(WATCOM)\h\nt

INCLUDES = ..;$(MATLAB_INCLUDES)$(ADD_INCLUDES)$(COMPILER_INCLUDES)


#------------------------ C and MEX optimization options ----------------------

# MEX_OPTS (e.g MEX_OPT=-g for debugging)
MEX_OPTS =
OPT_OPTS = $(DEFAULT_OPT_OPTS)

!ifeq MEX_OPTS -g
CC_OPT_OPTS  = -d2
MEX_OPT_OPTS =
!else
MEX_OPT_OPTS = -O
!endif

!ifndef CC_OPT_OPTS
!if "$(OPTIMIZATION_FLAGS)" != ""
CC_OPT_OPTS = $(OPTIMIZATION_FLAGS)
!else
CC_OPT_OPTS = $(OPT_OPTS)
!endif
!endif
# OPT_OPTS (e.g. OPT_OPTS=-g for debugging)
!ifeq OPT_OPTS -g
CC_OPT_OPTS  = -d2
!ifneq MEX_OPTS -g
MEX_OPT_OPTS = -g
!endif
!endif

!if "$(ADDITIONAL_LDFLAGS)" != ""
MEX_LDFLAGS = LINKFLAGS="$$LINKFLAGS $(ADDITIONAL_LDFLAGS)"
!else
MEX_LDFLAGS =
!endif

#-------------------------------- Mex Options  --------------------------------
MEX_FLAGS = -win32 $(MEX_OPTS) $(MEX_OPT_OPTS) $(MEX_LDFLAGS) $(MEX_OPT_FILE)


#-------------------------------- C Flags --------------------------------

# Required Options
REQ_OPTS = -bd -3s -e25 -ei -fpi87 -zp8 -zq -fr=
CC_OPTS = $(REQ_OPTS) $(CC_OPT_OPTS)
CPP_REQ_DEFINES = -DMATLAB_MEX_FILE

CFLAGS = $(CC_OPTS) $(CPP_REQ_DEFINES)
CPPFLAGS = $(CFLAGS)

#------------------------------- Source Files ---------------------------------
USER_OBJS =

OBJS = $(MODEL)_sf.obj $(MODULES) $(USER_OBJS)

#---------------------------- Additional Libraries ----------------------------

LIBUT  = $(MATLAB_ROOT)\extern\lib\win32\watcom\libut.lib

LIBS =
|>START_PRECOMP_LIBRARIES<|
ADDLIB = |>EXPAND_LIBRARY_NAME<|.lib
!ifeq OPT_OPTS $(DEFAULT_OPT_OPTS)
# use the pre-compiled library with the default opts
ADDLIB = |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_rtwsfcn_openwatc.lib
!endif
LIBS += $+$(ADDLIB)$- |>END_PRECOMP_LIBRARIES<|
|>START_EXPAND_LIBRARIES<|
LIBS += |>EXPAND_LIBRARY_NAME<|.lib |>END_EXPAND_LIBRARIES<|

LIBS += $(S_FUNCTIONS_LIB) $(LIBUT)

#-------------------------- Source Path ---------------------------------------

# User source path

!ifdef USER_PATH
EXTRA_PATH = ;$(USER_PATH)
!else
EXTRA_PATH =
!endif

# Path to additional S-Functions sources

ADD_SOURCES = |>START_EXPAND_RULES<||>EXPAND_DIR_NAME<|;|>END_EXPAND_RULES<|

# Source Path

.c : ..;$(MATLAB_ROOT)\simulink\src;$(ADD_SOURCES);$(EXTRA_PATH)
.cpp : ..;$(MATLAB_ROOT)\simulink\src;$(ADD_SOURCES);$(EXTRA_PATH)

#----------------------- Exported Environment Variables -----------------------
#
# Because of the 128 character command line length limitations in DOS, we
# use environment variables to pass additional information to the WATCOM
# Compiler and Linker
#
CCPATH = $(WATCOM)\binnt;$(WATCOM)\binw
PATH = $(CCPATH);$(%windir)\system32;$(%windir)

#--------------------------------- Rules --------------------------------------
.ERASE
.NOCHECK

.BEFORE
	@set path=$(PATH)
	@set INCLUDE=$(INCLUDES)
	@set WATCOM=$(WATCOM)
	@set MATLAB=$(MATLAB_ROOT)

..\$(MODEL)_sf.$(MEXEXT) : $(OBJS) $(LIBS)
	@echo $#$#$# Linking ...
	$(MEX) $(MEX_FLAGS) -outdir .. $(OBJS) $(LIBS)
	@echo $#$#$# Created MEX-file $(MODEL)_sf.$(MEXEXT)

.c.obj:
	@echo $#$#$# Compiling $[@
	$(CC) $(CFLAGS) $(USER_INCLUDES) $[@

.cpp.obj:
	@echo $#$#$# Compiling $[@
	$(CPP) $(CPPFLAGS) $(USER_INCLUDES) $[@

$(OBJS) : $(MAKEFILE) rtw_proj.tmw .AUTODEPEND

# Libraries:

|>START_EXPAND_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = &
|>START_EXPAND_MODULES<|    |>EXPAND_MODULE_NAME<|.obj &
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : $(MAKEFILE) rtw_proj.tmw $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@echo $#$#$# Creating $@
	@if exist $@ @del $@
	@for %i in ($(MODULES_|>EXPAND_LIBRARY_NAME<|)) do $(LIBCMD) $@ +%i
	@echo $#$#$# Created $@

|>END_EXPAND_LIBRARIES<|

|>START_PRECOMP_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = &
|>START_EXPAND_MODULES<|    |>EXPAND_MODULE_NAME<|.obj &
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : $(MAKEFILE) rtw_proj.tmw $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@echo $#$#$# Creating $@
	@if exist $@ @del $@
	@for %i in ($(MODULES_|>EXPAND_LIBRARY_NAME<|)) do $(LIBCMD) $@ +%i
	@echo $#$#$# Created $@

|>END_PRECOMP_LIBRARIES<|

#[EOF] rtwsfcn_watc.tmf

