# Copyright 1994-2012 The MathWorks, Inc.
#
# File    : ert_msvc.tmf   
#
# Abstract:
#	Template makefile used to create <model>.mak file needed for 
#	Microsoft Visual C/C++ environement.
#
# 	Note that this template is automatically customized by the build 
#       procedure to create "<model>.mk" which then is passed to nmake to 
#       produce <model>.mak
#
#       The following defines can be used to modify the behavior of the
#	build:
#    OPTS           - Additional user defines.
#    USER_SRCS      - Additional user sources, such as files needed by
#                     S-functions.
#    USER_INCLUDES  - Additional include paths
#                     (i.e. USER_INCLUDES="/I where-ever1 /I where-ever2")


#------------------------ Macros read by make_rtw -----------------------------
#
# The following macros are read by the build procedure:
#
#  MAKECMD         - This is the command used to invoke the make utility
#  HOST            - What platform this template makefile is targeted for
#                    (i.e. PC or UNIX)
#  BUILD           - Invoke make from the build procedure (yes/no)?
#  SYS_TARGET_FILE - Name of system target file.

MAKECMD         = nmake
HOST            = PC
BUILD           = yes
SYS_TARGET_FILE = ert.tlc

#---------------------- Tokens expanded by make_rtw ---------------------------
#
# The following tokens, when wrapped with "|>" and "<|" are expanded by the
# build procedure.
#
#  MODEL_NAME          - Name of the Simulink block diagram
#  MODEL_MODULES       - Any additional generated source modules
#  MAKEFILE_NAME       - Name of makefile created from template makefile <model>.mk
#  MATLAB_ROOT         - Path to where MATLAB is installed.
#  MATLAB_BIN          - Path to MATLAB executable.
#  S_FUNCTIONS         - List of additional S-function modules.
#  S_FUNCTIONS_LIB     - List of S-functions libraries to link.
#  NUMST               - Number of sample times
#  NCSTATES            - Number of continuous states
#  BUILDARGS           - Options passed in at the command line.
#  MULTITASKING        - yes (1) or no (0): Is solver mode multitasking
#  INTEGER_CODE        - yes (1) or no (0): Is generated code purely integer
#  MAT_FILE            - yes (1) or no (0): Should mat file logging be done,
#                        if 0, the generated code runs indefinitely
#  EXT_MODE            - yes (1) or no (0): Build for external mode
#  EXTMODE_TRANSPORT   - Index of transport mechanism (e.g. tcpip, serial) for extmode
#  EXTMODE_STATIC      - yes (1) or no (0): Use static instead of dynamic mem alloc.
#  EXTMODE_STATIC_SIZE - Size of static memory allocation buffer.
#  MULTI_INSTANCE_CODE - Is the generated code multi instantiable (1/0)?
#  PORTABLE_WORDSIZES  - Is this build intented for SIL simulation with portable word sizes (1/0)?

MODEL               = |>MODEL_NAME<|
MODULES             = |>MODEL_MODULES<|
MAKEFILE            = |>MAKEFILE_NAME<|
MATLAB_ROOT         = |>MATLAB_ROOT<|
ALT_MATLAB_ROOT     = |>ALT_MATLAB_ROOT<|
MASTER_ANCHOR_DIR   = |>MASTER_ANCHOR_DIR<|
START_DIR           = |>START_DIR<|
MATLAB_BIN          = |>MATLAB_BIN<|
ALT_MATLAB_BIN      = |>ALT_MATLAB_BIN<|
S_FUNCTIONS         = |>S_FUNCTIONS<|
S_FUNCTIONS_LIB     = |>S_FUNCTIONS_LIB<|
NUMST               = |>NUMST<|
NCSTATES            = |>NCSTATES<|
BUILDARGS           = |>BUILDARGS<|
MULTITASKING        = |>MULTITASKING<|
INTEGER_CODE        = |>INTEGER_CODE<|
MAT_FILE            = |>MAT_FILE<|
ONESTEPFCN          = |>COMBINE_OUTPUT_UPDATE_FCNS<|
TERMFCN             = |>INCLUDE_MDL_TERMINATE_FCN<|
EXT_MODE            = |>EXT_MODE<|
EXTMODE_TRANSPORT   = |>EXTMODE_TRANSPORT<|
EXTMODE_STATIC      = |>EXTMODE_STATIC_ALLOC<|
EXTMODE_STATIC_SIZE = |>EXTMODE_STATIC_ALLOC_SIZE<|
MULTI_INSTANCE_CODE = |>MULTI_INSTANCE_CODE<|
CLASSIC_INTERFACE   = |>CLASSIC_INTERFACE<|
PORTABLE_WORDSIZES  = |>PORTABLE_WORDSIZES<|
TARGET_LANG_EXT     = |>TARGET_LANG_EXT<|
GEN_SAMPLE_MAIN     = |>GEN_SAMPLE_MAIN<|


!if "$(MATLAB_ROOT)" != "$(ALT_MATLAB_ROOT)"
MATLAB_ROOT = $(ALT_MATLAB_ROOT)
!endif
!if "$(MATLAB_BIN)" != "$(ALT_MATLAB_BIN)"
MATLAB_BIN = $(ALT_MATLAB_BIN)
!endif

#---------------------------- Tool Definitions -------------------------------

PERL   = $(MATLAB_ROOT)\sys\perl\win32\bin\perl

#------------------------------ Include Path ----------------------------------

MATLAB_INCLUDES = \
 /I \
 /I "$(MATLAB_ROOT)\extern\include" \
 /I "$(MATLAB_ROOT)\simulink\include" \
 /I "$(MATLAB_ROOT)\rtw\c\src" \
 /I "$(MATLAB_ROOT)\rtw\c\src\ext_mode\common"

# Additional includes

ADD_INCLUDES = \
|>START_EXPAND_INCLUDES<| /I "|>EXPAND_DIR_NAME<|" \
|>END_EXPAND_INCLUDES<|

INCLUDES = $(MATLAB_INCLUDES) $(ADD_INCLUDES) $(USER_INCLUDES) . 

#------------------------ External mode ---------------------------------------
# Uncomment -DVERBOSE to have information printed to stdout
# To add a new transport layer, see the comments in
#   <matlabroot>/toolbox/simulink/simulink/extmode_transports.m
!if $(EXT_MODE) == 1
EXT_CC_OPTS = -DEXT_MODE # -DVERBOSE
!if $(EXTMODE_TRANSPORT) == 0
EXT_SRC = ext_svr.c updown.c ext_work.c rtiostream_interface.c rtiostream_tcpip.c
EXT_LIB = wsock32.lib
!endif
!if $(EXTMODE_TRANSPORT) == 1
EXT_SRC = ext_svr.c updown.c ext_work.c ext_svr_serial_transport.c
EXT_SRC = $(EXT_SRC) ext_serial_pkt.c rtiostream_serial_interface.c rtiostream_serial.c
EXT_LIB =
!endif
!if $(EXTMODE_STATIC) == 1
EXT_SRC     = $(EXT_SRC) mem_mgr.c
EXT_CC_OPTS = $(EXT_CC_OPTS) -DEXTMODE_STATIC -DEXTMODE_STATIC_SIZE=$(EXTMODE_STATIC_SIZE)
!endif
!else
EXT_SRC     =
EXT_CC_OPTS =
EXT_LIB     =
!endif

#----------------------------- Defines ----------------------------------------

OPTS =

!if $(PORTABLE_WORDSIZES) == 1
REQ_DEFINES = -DPORTABLE_WORDSIZES
!else
REQ_DEFINES =
!endif

DEFINES = /D MODEL=$(MODEL) /D INTEGER_CODE=$(INTEGER_CODE) \
	  /D NUMST=$(NUMST) /D MT=$(MULTITASKING) /D NCSTATES=$(NCSTATES)\
          /D MAT_FILE=$(MAT_FILE) \
          /D ONESTEPFCN=$(ONESTEPFCN) \
	  /D TERMFCN=$(TERMFCN) \
	  /D MULTI_INSTANCE_CODE=$(MULTI_INSTANCE_CODE) \
	  /D CLASSIC_INTERFACE=$(CLASSIC_INTERFACE) \
	  $(REQ_DEFINES) $(OPTS) $(EXT_CC_OPTS)

#----------------------------- Source Files -----------------------------------

!if $(INTEGER_CODE) == 1
ADD_SRCS =
!else
ADD_SRCS = rt_nonfinite.c
!endif

REQ_SRCS  = $(MODEL).$(TARGET_LANG_EXT) $(MODULES) $(ADD_SRCS) $(EXT_SRC)

!if $(GEN_SAMPLE_MAIN) == 0
REQ_SRCS  = $(REQ_SRCS) rt_main.c
!else
REQ_SRCS  = $(REQ_SRCS) ert_main.$(TARGET_LANG_EXT)
!endif

USER_SRCS =

LIB_SRCS =
|>START_EXPAND_LIBRARIES<|
LIB_SRCS = $(LIB_SRCS) |>START_EXPAND_MODULES<| |>EXPAND_MODULE_NAME<|.c |>END_EXPAND_MODULES<|
|>END_EXPAND_LIBRARIES<|
|>START_PRECOMP_LIBRARIES<|
LIB_SRCS = $(LIB_SRCS) |>START_EXPAND_MODULES<| |>EXPAND_MODULE_NAME<|.c |>END_EXPAND_MODULES<|
|>END_PRECOMP_LIBRARIES<|

SRCS = $(REQ_SRCS) $(USER_SRCS) $(S_FUNCTIONS) $(LIB_SRCS)
OBJS_CPP_UPPER = $(SRCS:.CPP=.ofile)
OBJS_CPP_LOWER = $(OBJS_CPP_UPPER:.cpp=.ofile)
OBJS_C_UPPER = $(OBJS_CPP_LOWER:.C=.ofile)
OBJS = $(OBJS_C_UPPER:.c=.ofile)
#--------------------------------- Rules --------------------------------------

$(MODEL).mak : $(MODEL).mki
	@$(PERL) $(MATLAB_ROOT)\rtw\c\tools\msvc_mak.pl \
		$(MATLAB_ROOT)\rtw\c\tools\msvc_tpl.mak \
		$(MODEL).mki
	@del $(MODEL).mki
	@if exist $(MODEL).dsw del $(MODEL).dsw
	@if exist $(MODEL).dsp del $(MODEL).dsp
	@echo ### Created $(MODEL).mak for use with Microsoft Visual C/C++

$(MODEL).mki ::
	@if exist $(MODEL).mki del $(MODEL).mki
	@echo Model           = $(MODEL)> $(MODEL).mki
	@echo RequiredDefines = $(DEFINES)>> $(MODEL).mki
	@echo IncludeDirs     = $(INCLUDES)>> $(MODEL).mki
        @echo AdditionalLibs  = $(EXT_LIB) $(S_FUNCTIONS_LIB)>> $(MODEL).mki
	@echo Sources:>> $(MODEL).mki

$(MODEL).mki :: $(OBJS)


!if $(GEN_SAMPLE_MAIN) == 0
{$(MATLAB_ROOT)\rtw\c\src\common}.c.ofile :
	@echo $<>> $(MODEL).mki
!endif

{$(MATLAB_ROOT)\rtw\c\src}.c.ofile :
	@echo $<>> $(MODEL).mki

{$(MATLAB_ROOT)\rtw\c\src\ext_mode\common}.c.ofile :
	@echo $<>> $(MODEL).mki

{$(MATLAB_ROOT)\rtw\c\src\rtiostream\rtiostreamtcpip}.c.ofile :
	@echo $<>> $(MODEL).mki

{$(MATLAB_ROOT)\rtw\c\src\ext_mode\serial}.c.ofile :
	@echo $<>> $(MODEL).mki

{$(MATLAB_ROOT)\rtw\c\src\ext_mode\custom}.c.ofile :
	@echo $<>> $(MODEL).mki

# Additional sources

|>START_EXPAND_RULES<|{|>EXPAND_DIR_NAME<|}.c.ofile :
	@echo $<>> $(MODEL).mki

|>END_EXPAND_RULES<|

|>START_EXPAND_RULES<|{|>EXPAND_DIR_NAME<|}.cpp.ofile :
	@echo $<>> $(MODEL).mki

|>END_EXPAND_RULES<|

{$(MATLAB_ROOT)/simulink/src}.c.ofile :
	@echo $<>> $(MODEL).mki

{$(MATLAB_ROOT)/simulink/src}.cpp.ofile :
	@echo $<>> $(MODEL).mki

{..}.c.ofile :
	@echo $<>> $(MODEL).mki

.c.ofile :
	@echo $<>> $(MODEL).mki

{..}.cpp.ofile :
	@echo $<>> $(MODEL).mki

.cpp.ofile :
	@echo $<>> $(MODEL).mki
